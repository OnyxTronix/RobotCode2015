// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2231.Robot2231.subsystems;

import org.usfirst.frc2231.Robot2231.OI;
import org.usfirst.frc2231.Robot2231.Robot;
import org.usfirst.frc2231.Robot2231.RobotMap;
import org.usfirst.frc2231.Robot2231.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.Joystick.RumbleType;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Stackevator extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController elevatorMotor1 = RobotMap.stackevatorelevatorMotor1;
    SpeedController elevatorMotor2 = RobotMap.stackevatorelevatorMotor2;
    DigitalInput releaseSwitch = RobotMap.stackevatorreleaseSwitch;
    DigitalInput level1Switch = RobotMap.stackevatorlevel1Switch;
    DigitalInput level2Switch = RobotMap.stackevatorlevel2Switch;
    //DigitalInput topSwitch = RobotMap.stackevatorTopSwitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    final static double LIFT_VALUE = 1.0;
    final static double LOWER_VALUE = -1.0;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new LiftElevatorByJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void set(double value) {
    	this.elevatorMotor1.set(value);
    	this.elevatorMotor2.set(-value);
		
	}
    
    public void lift()
    {
    	this.set(LIFT_VALUE);
    }
    
    public void lower()
    {
    	this.set(LOWER_VALUE);
    }
    
    public void set_elevator_by_joystick(Joystick stick) {
    	this.set(stick.getRawAxis(3)-stick.getRawAxis(2));
	}
    
    public void stop()
    {
    	this.set(0);
    }
}

